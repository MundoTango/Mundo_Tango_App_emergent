name: Visual Regression Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:
    inputs:
      update_baselines:
        description: 'Update visual baselines'
        required: false
        default: 'false'

env:
  PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
  NODE_ENV: test

jobs:
  visual-regression:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      matrix:
        browser: [chromium, firefox, webkit]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps ${{ matrix.browser }}

      - name: Setup database
        run: |
          echo "Setting up test database..."
          npm run test:setup

      - name: Build application
        run: npm run build

      - name: Start server
        run: |
          npm run start:dist &
          sleep 10
          curl -f http://localhost:5000 || exit 1

      - name: Run Percy visual tests
        if: env.PERCY_TOKEN != ''
        run: |
          npx percy exec -- npx playwright test tests/visual/percy/percy-snapshots.spec.ts --browser=${{ matrix.browser }}

      - name: Run BackstopJS tests
        run: |
          if [ "${{ github.event.inputs.update_baselines }}" == "true" ]; then
            npx backstop reference
          else
            npx backstop test || true
          fi

      - name: Upload BackstopJS report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backstop-report-${{ matrix.browser }}
          path: backstop_data/html_report
          retention-days: 7

      - name: Upload BackstopJS differences
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: backstop-diffs-${{ matrix.browser }}
          path: backstop_data/bitmaps_test
          retention-days: 7

      - name: Comment on PR with visual changes
        if: github.event_name == 'pull_request' && failure()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            let comment = '## üé® Visual Regression Test Results\n\n';
            comment += '‚ö†Ô∏è Visual differences detected! Please review the changes.\n\n';
            
            // Add Percy link if available
            if (process.env.PERCY_TOKEN) {
              comment += '[View Percy Dashboard](https://percy.io/)\n\n';
            }
            
            // Add BackstopJS summary
            const reportPath = 'backstop_data/ci_report/xunit.xml';
            if (fs.existsSync(reportPath)) {
              comment += '### BackstopJS Results\n';
              comment += '- Browser: ${{ matrix.browser }}\n';
              comment += '- [Download Report Artifacts](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})\n';
            }
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

      - name: Cleanup
        if: always()
        run: |
          npm run test:teardown || true

  accessibility-visual:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright
        run: npx playwright install chromium

      - name: Build application
        run: npm run build

      - name: Start server
        run: |
          npm run start:dist &
          sleep 10

      - name: Run accessibility visual tests
        run: |
          npx playwright test tests/visual/accessibility-visual.spec.ts

      - name: Upload accessibility results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: accessibility-visual-results
          path: test-results/
          retention-days: 7

  performance-visual:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Run Lighthouse CI
        run: |
          npm run start:dist &
          sleep 10
          npx lhci autorun --config=lighthouserc.json

      - name: Upload Lighthouse results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-results
          path: .lighthouseci/
          retention-days: 7

  notify-results:
    needs: [visual-regression, accessibility-visual, performance-visual]
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Notify success
        if: success()
        run: |
          echo "‚úÖ All visual regression tests passed!"

      - name: Notify failure
        if: failure()
        run: |
          echo "‚ùå Visual regression tests failed. Please review the artifacts."