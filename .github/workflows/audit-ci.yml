name: Audit CI Pipeline
on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main, develop]

jobs:
  page-audit:
    name: Page Quality Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run page audit on recent changes
        run: npm run audit-page memories-feed
        continue-on-error: true
      
      - name: Upload audit results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: page-audit-results
          path: docs/audit-reports/
          retention-days: 30

  lighthouse-audit:
    name: Lighthouse Performance
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run Lighthouse audit
        run: npm run lighthouse:audit
        continue-on-error: true
      
      - name: Upload Lighthouse results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lighthouse-results
          path: docs/lighthouse-reports/
          retention-days: 30
      
      - name: Comment PR with results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const files = fs.readdirSync('docs/lighthouse-reports/');
            if (files.length > 0) {
              const latest = files.sort().reverse()[0];
              const report = JSON.parse(fs.readFileSync(`docs/lighthouse-reports/${latest}`, 'utf8'));
              
              let comment = '## 🔦 Lighthouse Audit Results\n\n';
              comment += `**Average Scores:**\n`;
              comment += `- ⚡ Performance: ${report.summary.avgPerformance}/100\n`;
              comment += `- ♿ Accessibility: ${report.summary.avgAccessibility}/100\n`;
              comment += `- ✅ Best Practices: ${report.summary.avgBestPractices}/100\n`;
              comment += `- 🔍 SEO: ${report.summary.avgSEO}/100\n`;
              comment += `- 📱 PWA: ${report.summary.avgPWA}/100\n\n`;
              comment += `**Critical Issues:** ${report.summary.criticalIssues}\n`;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }

  bundle-size-check:
    name: Bundle Size Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Capture bundle snapshot
        run: npm run bundle:capture ${{ github.sha }}
      
      - name: Compare bundle sizes
        id: bundle-compare
        run: |
          npm run bundle:compare || true
        continue-on-error: true
      
      - name: Upload bundle tracking
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: bundle-tracking
          path: docs/bundle-tracking/
          retention-days: 30
      
      - name: Fail on critical bundle increase
        run: |
          if grep -q "CRITICAL" docs/bundle-tracking/*.json 2>/dev/null; then
            echo "::error::Bundle size increased beyond critical threshold!"
            exit 1
          fi

  security-scan:
    name: Security & Dependency Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run security scan
        run: npm run security:scan
        continue-on-error: true
      
      - name: Run dependency analysis
        run: npm run deps:map
      
      - name: Upload security results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-reports
          path: docs/security-reports/
          retention-days: 30

  accessibility-test:
    name: Accessibility & i18n
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run accessibility scan
        run: npm run a11y:scan
        continue-on-error: true
      
      - name: Run translation coverage scan
        run: npm run translation:scan
      
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: accessibility-reports
          path: |
            docs/a11y-reports/
            docs/translation-reports/
          retention-days: 30

  performance-dashboard:
    name: Performance Dashboard
    runs-on: ubuntu-latest
    needs: [lighthouse-audit, bundle-size-check, page-audit]
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Generate performance dashboard
        run: npm run perf:dashboard
      
      - name: Upload dashboard
        uses: actions/upload-artifact@v4
        with:
          name: performance-dashboard
          path: docs/performance-dashboard/
          retention-days: 30
      
      - name: Comment dashboard summary on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const files = fs.readdirSync('docs/performance-dashboard/');
            if (files.length > 0) {
              const latest = files.sort().reverse()[0];
              const dashboard = JSON.parse(fs.readFileSync(`docs/performance-dashboard/${latest}`, 'utf8'));
              
              const statusIcon = dashboard.overall.status === 'excellent' ? '🟢' :
                                 dashboard.overall.status === 'good' ? '🟡' :
                                 dashboard.overall.status === 'needs-improvement' ? '🟠' : '🔴';
              
              let comment = '## 📊 Performance Dashboard\n\n';
              comment += `**Overall Health:** ${statusIcon} ${dashboard.overall.healthScore}/100 (${dashboard.overall.status.toUpperCase()})\n\n`;
              comment += '**Recommendations:**\n';
              dashboard.overall.recommendations.slice(0, 5).forEach((rec, i) => {
                comment += `${i + 1}. ${rec}\n`;
              });
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }
