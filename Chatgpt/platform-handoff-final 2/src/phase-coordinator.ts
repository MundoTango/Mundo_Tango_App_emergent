import { createClient } from "@supabase/supabase-js";import { enqueueJob } from "../common/queue.js";
export async function startAllPhases(){ const sb=createClient(process.env.SUPABASE_URL!, process.env.SUPABASE_SERVICE_ROLE_KEY!); const { data, error }=await sb.from("phase_tasks").select("*"); if(error) throw error; let enq=0; for(const r of (data||[])){ if(r.status!=="queued") continue; const agent=`phase_${String(r.phase).padStart(2,"0")}`; await enqueueJob(agent,{ action:"run_task", phase:r.phase, task:r.task }); enq++; } return { ok:true, enqueued:enq }; }
export async function statusSummary(){ const sb=createClient(process.env.SUPABASE_URL!, process.env.SUPABASE_SERVICE_ROLE_KEY!); const { data, error }=await sb.from("phase_tasks").select("phase,status"); if(error) throw error; const s:any={}; for(const r of (data||[])){ const p=String(r.phase); s[p]=s[p]||{}; s[p][r.status]=(s[p][r.status]||0)+1; } return s; }