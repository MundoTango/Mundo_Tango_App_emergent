import { makeCtx } from "../../common/runtime.js";import { handler as checkout } from "./subagents/stripe_checkout_agent/handler.js";import { sendEmail } from "../../common/notify.js";
export async function handle(input:any){ const ctx=await makeCtx("stripe_mercury"); const a=input?.action||"checkout"; if(a==="checkout"){ return await checkout(input, ctx); } return { status:"ok" }; }
export async function webhook(input:any){ const ctx=await makeCtx("stripe_mercury:webhook"); const { supabase, log }=ctx; const { session_id, status="succeeded" }=input||{}; if(!session_id) return { status:"fail", error:{ code:"missing_session_id" } }; const { data, error }=await supabase.from("payments").update({ status }).eq("stripe_session_id", session_id).select().single(); if(error) return { status:"fail", error:{ code:"db_error", message:error.message } }; if(status==="succeeded"){ const to=process.env.ADMIN_EMAIL||"test@example.com"; await sendEmail(to, "Payment succeeded", `<p>Payment ${data.id} succeeded.</p>`); await supabase.from("notifications").insert({ user_id: data.user_id, subject: "Payment succeeded", html: "<p>Success</p>", sent_at: new Date().toISOString() }); } return { status:"ok", data }; }