alter table trips enable row level security; create policy if not exists trips_select_own on trips for select using (auth.uid() = user_id); create policy if not exists trips_insert_own on trips for insert with check (auth.uid() = user_id); create policy if not exists trips_update_own on trips for update using (auth.uid() = user_id); create policy if not exists trips_delete_own on trips for delete using (auth.uid() = user_id); alter table trip_participants enable row level security; create policy if not exists tp_select_self on trip_participants for select using (participant_id = auth.uid()); create policy if not exists tp_insert_owner on trip_participants for insert with check (exists (select 1 from trips t where t.trip_id = trip_id and t.user_id = auth.uid())); alter table affiliate_links enable row level security; create policy if not exists al_select_trips_or_events on affiliate_links for select using ( (trip_id in (select trip_id from trips where user_id = auth.uid())) or event_id is not null );